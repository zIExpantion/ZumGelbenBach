@page "/login"
@rendermode InteractiveServer
@using ZumGelbenBach;
@using ZumGelbenBach.Components.Models
@inject Authentifications auth


<PageTitle>Login</PageTitle>

<h1>Login</h1>
<p> Username: <br /> <input id="username" type="text" @bind="Username" /> </p>
<p> Password: <br /> <input id="password" type="password" @bind="Password" /> </p>
<br />
<button class="btn btn-primary" style="color: white;" @onclick="LoginS">Login</button>

@code
{
    public Boolean Auth { get; set; }

    private string Username { get; set; }
    private string Password { get; set; }

    [Inject] private NavigationManager navigation { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }

    private async Task LoginS()
    {
        if (!string.IsNullOrWhiteSpace(Username) && !string.IsNullOrWhiteSpace(Password))
        {
            if (Username == "kueche" && Password == "hallo")
            {
                await JSRuntime.InvokeVoidAsync("confirm", "Login successful");
                auth.login = true;
                navigation.NavigateTo("/kitchen");
            }
            else
            {
                auth.login = false;
                await JSRuntime.InvokeVoidAsync("confirm", "Invalid username or password");
            }
        }
        else
        {
            auth.login = false;
            await JSRuntime.InvokeVoidAsync("confirm", "Please enter both username and password");
        }
    }
}