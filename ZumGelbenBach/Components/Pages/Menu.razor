@page "/menu"
@rendermode InteractiveServer
@using ZumGelbenBach;

<PageTitle>menu</PageTitle>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-primary" @onclick="GetData">Load Menu</button>

@if (menuItems != null && menuItems.Any())
{
    @foreach (var item in menuItems)
    {
        <div id=@item["Bezeichnung"].ToString() class="menu-item">

            <div style="float:right;width:100px;">
                <img src="~/favicon.png" alt="Menu Image" />
            </div>

            <div style="margin:0 auto;width:100px;">
                <h4>@item["Bezeichnung"].ToString()</h4>
            </div>

            <div>
                <input id="quantity_@item["Bezeichnung"].ToString()" type="number" placeholder="Quantity" style="transform: scale(0.75)" /> <!-- Bitte noch machen: Wenn value gesetzt hier, dann checkbox füllen.-->
                <input id="select_@item["Bezeichnung"].ToString()" type="checkbox" style="transform: scale(1.5)"/> <!-- Wenn checkbox aktiviert wird, dann Oben value auf 1 setzen. Wenn deaktiviert wird, dann oben value löschen-->
            </div>
        </div>
        <br />
    }
}
else
{
    <p>No data loaded. Click "Load Menu" to fetch items.</p>
}

@code {
    private int currentCount = 0;

    // Liste der Datenzeilen (jede Zeile ist ein Dictionary)
    private List<Dictionary<string, object>> menuItems = new List<Dictionary<string, object>>();

    private void IncrementCount()
    {
        currentCount++;
    }

    private void GetData()
    {
        try
        {
            // DBConnector initialisieren
            DBConnector dB = new DBConnector();

            // Daten abrufen (z. B. Spalten Benutzer_ID, Name, Preis)
            var reader = dB.ReadData("Menue", new[] { "Bezeichnung", "Beschreibung", "Preis", "Größe" });

            menuItems.Clear(); // Alte Daten entfernen

            while (reader.Read())
            {
                var row = new Dictionary<string, object>
                {
                    { "Bezeichnung", reader["Bezeichnung"] },
                    { "Beschreibung", reader["Beschreibung"] },
                    { "Preis", reader["Preis"] },
                    { "Größe", reader["Größe"] }
                };

                menuItems.Add(row);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }
}
